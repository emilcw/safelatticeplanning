<?xml version="1.0"?>
<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">

  This launch file start ths OctoMap so that we can build a representation of the environment.
  It listens on the converted pointcloud (from laser) and builds a map incrementally.
  It can be visualized in RVIZ by subscribing to the /occpuied_cells_vis_array topic.
  It can also be used for planning be looking at /octomap_full topic.

-->
<launch>
  <arg name="namespace" default="/"/>
  <group ns="$(arg namespace)">
    <arg name='resolution'/>
    <arg name='max_range'/>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
      <param name="resolution" value="$(arg resolution)" />
      
      <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
      <param name="frame_id" type="string" value="/world" />
      <param name="publish_free_space" value="true" />

      
      <!-- maximum range to integrate (speedup!) -->
      <param name="sensor_model/max_range" value="$(arg max_range)" />
      
      <!-- data source to integrate (PointCloud2) -->
      <remap from="cloud_in" to="converted_pc" />
      
	  </node>
  </group>
</launch>
